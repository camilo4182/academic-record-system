DROP TABLE IF EXISTS enrollment_classes CASCADE;
DROP TABLE IF EXISTS career_courses CASCADE;
DROP TABLE IF EXISTS classes CASCADE;
DROP TABLE IF EXISTS courses CASCADE;
DROP TABLE IF EXISTS enrollments CASCADE;
DROP TABLE IF EXISTS careers CASCADE;
DROP TABLE IF EXISTS professors CASCADE;
DROP TABLE IF EXISTS students CASCADE;
DROP TABLE IF EXISTS administrators CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS roles CASCADE;

CREATE TABLE careers (
	id UUID PRIMARY KEY,
	name VARCHAR(60) NOT NULL UNIQUE
);

CREATE TABLE courses (
	id UUID PRIMARY KEY,
	name VARCHAR(60) NOT NULL UNIQUE,
	credits INTEGER NOT NULL
);

CREATE TABLE career_courses (
	career_id UUID REFERENCES careers(id) ON DELETE CASCADE,
	course_id UUID REFERENCES courses(id) ON DELETE CASCADE,
	PRIMARY KEY (career_id, course_id)
);

CREATE TABLE roles (
	id UUID PRIMARY KEY,
	name VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE users (
	id UUID PRIMARY KEY,
	first_name VARCHAR(20) NOT NULL UNIQUE,
	last_name VARCHAR(20) NOT NULL,
	username VARCHAR(45) NOT NULL UNIQUE,
	password VARCHAR(200) NOT NULL,
	email VARCHAR(60) NOT NULL UNIQUE,
	role_id UUID REFERENCES roles(id) ON DELETE CASCADE
);

CREATE TABLE professors (
	id UUID PRIMARY KEY REFERENCES users(id) ON DELETE CASCADE,
	salary DECIMAL NOT NULL
);

CREATE TABLE students (
	id UUID PRIMARY KEY REFERENCES users(id) ON DELETE CASCADE,
	average_grade DECIMAL NOT NULL
);

CREATE TABLE administrators (
	id UUID PRIMARY KEY REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE classes (
	id UUID PRIMARY KEY,
	capacity INTEGER NOT NULL,
	enrolled_students INTEGER NOT NULL,
	available BOOLEAN NOT NULL,
	course_id UUID REFERENCES courses(id) ON DELETE CASCADE,
	professor_id UUID REFERENCES professors(id) ON DELETE CASCADE
);

CREATE TABLE enrollments (
	id UUID PRIMARY KEY,
	student_id UUID UNIQUE REFERENCES students(id) ON DELETE CASCADE,
	career_id UUID REFERENCES careers(id) ON DELETE CASCADE
);

CREATE TABLE enrollment_classes (
	enrollment_id UUID REFERENCES enrollments(id) ON DELETE CASCADE,
	class_id UUID REFERENCES classes(id) ON DELETE CASCADE,
	semester SMALLINT NOT NULL,
	PRIMARY KEY (enrollment_id, class_id)
);
